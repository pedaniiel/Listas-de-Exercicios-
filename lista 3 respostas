questao 3(a,b,c):
//declaração das bibliotecas
#include <stdio.h> 
#include <stdlib.h>

int *soma_vetor_simples(int*A, int*B, int n);
int *soma_vetor_ponteiros(intA, int*B, int n);

int *soma_vetor_simples(int *A, int*B, int n){
    
    int i,j; //declaração de variaveis
    int *C;
    C = (int*) malloc(n*n*sizeof(int));
    for(i=0; i<n; i++){ //laço de repetição
        for(j=0; j<n; j++)
            C[i*n +j] = A[i*n +j] +B[i*n +j];
    }
    return C; //retornando c
}

int **soma_vetor_ponteiros(int **A, int **B, int n){
    //declaração de variaveis 
    int i,j;
    int**C;
    C = (int*) malloc(n*sizeof(int));
    for(i=0; i<n; i++)
        C[i] = (int*) malloc(n*sizeof(int));

    // Laço de repetição para somar C= A+B
    for(i=0;i<n;i++){
        for(j=0;j<n;j++)
            C[i][j] = A[i][j] + B[i][j];
    }
    return C;
}

int main(void){
    /* Função principal do programa em C*/ 
//declaração de variaveis
    int i,j, n; 
    printf("Insira a dimensão da matriz: \t");
    scanf("%d", &n);

    int**A, **B; //declaração de variaveis
    /Alocação da matriz A/
    A = (int*) malloc(n*sizeof(int)); //alocando o valor de n
    for(i=0; i<n; i++){
        A[i] = (int*) malloc(n*sizeof(int));
    }

    /Alocação da matriz B/
    B = (int*) malloc(n*sizeof(int));
    for(i=0; i<n; i++){
        B[i] = (int*) malloc(n*sizeof(int));
    }

    // Leitura dos elementos de A
    for(i=0;i<n;i++){
        for(j=0;j<n;j++){
            printf("Matriz A: Digite o elemento da posicao i=%d j=%d \n", i, j);
            scanf("%d", &A[i][j]); //lendo as variaveis i e j
        }
    }

    // Leitura dos elementos de B
    for(i=0;i<n;i++){
        for(j=0;j<n;j++){
            printf("Matriz B: Digite o elemento da posicao i=%d j=%d \n", i, j);
            scanf("%d", &B[i][j]);
        }
    }

    int**Soma = soma_vetor_ponteiros(A, B,n); //chamada da função 

    // Impressão do resultado da soma
    for(i=0;i<n;i++){
        for(j=0;j<n;j++){ //laço de repetiçao
        printf("\n %d \t", Soma[i][j]); //soma de i e j
        }
    }
    return 0; //para retornar algo
}
